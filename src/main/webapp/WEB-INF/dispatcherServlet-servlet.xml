<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- SpringMVC的配置文件，包含网站跳转逻辑的控制，配置  -->
    <!-- 配置需要自动扫描的包 -->
    <!-- use-default-filters="true"(默认)表示要扫描com.xwl下的所有的包，设置扫描指定的包则需要设置为false -->
    <context:component-scan base-package="com.xwl" use-default-filters="false">
        <!-- 只扫描控制器：type="annotation"表示使用注解，
        expression="org.springframework.stereotype.Controller"值只扫描带@Controller注解的类  -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 配置视图解析器，方便页面返回  -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">

        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--两个标准配置  -->
    <!-- 将springmvc不能处理的请求交给tomcat，这样就实现了动态/静态资源都能访问成功 -->
    <!-- 在springMVC-servlet.xml中配置<mvc:default-servlet-handler />后，
    会在Spring MVC上下文中定义一个org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，
    它会像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，
    就将该请求转由Web应用服务器(如tomcat)默认的Servlet处理，如果不是静态资源的请求，才由DispatcherServlet继续处理。
    一般web应用服务器默认的servlet的名称都是 default -->
    <mvc:default-servlet-handler/>
    <!-- 能支持springmvc更高级的一些功能，JSR303校验，快捷的ajax...映射动态请求 -->
    <mvc:annotation-driven/>

</beans>